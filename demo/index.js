/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./demo.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./bigJsonSqlCode.js":
/*!***************************!*\
  !*** ./bigJsonSqlCode.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var wrapper = \"\\n@bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb{\\n    @aarrraas(10000000)[\\n        @aaaaaaaaa 1111111111111\\n        @bbbbbbbbbb 2222222222222\\n        @cccccccccc 2222222222222\\n        @dddddddddd 2222222222222\\n        @eeeeeeeeeeeee 2222222222222\\n    ]\\n    \\n}\\n######PLACEHOLDER######\\n\";\nvar last = \"\\n@bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb{\\n    @aarrraas(10000000)[\\n        @aaaaaaaaa 1111111111111\\n        @bbbbbbbbbb 2222222222222\\n        @cccccccccc 2222222222222\\n        @dddddddddd 2222222222222\\n        1@eeeeeeeeeeeee 2222222222222\\n    ]\\n}\\n\";\nvar newCode = wrapper;\nvar maxNum = 1;\n\nfor (var i = 0; i < maxNum; i++) {\n  newCode = newCode.replace('######PLACEHOLDER######', wrapper);\n}\n\nnewCode = newCode.replace('######PLACEHOLDER######', last);\nnewCode = \"\\n@a{\\n    @b{\\n        @c\\n        1\\n    }\\n}\\n\\n\";\nconsole.info(newCode);\nmodule.exports = newCode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9iaWdKc29uU3FsQ29kZS5qcz81NGJhIl0sIm5hbWVzIjpbIndyYXBwZXIiLCJsYXN0IiwibmV3Q29kZSIsIm1heE51bSIsImkiLCJyZXBsYWNlIiwiY29uc29sZSIsImluZm8iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFDQSxJQUFNQSxPQUFPLDZSQUFiO0FBY0EsSUFBTUMsSUFBSSwrUEFBVjtBQVlBLElBQUlDLE9BQU8sR0FBR0YsT0FBZDtBQUNBLElBQU1HLE1BQU0sR0FBRyxDQUFmOztBQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0QsTUFBcEIsRUFBNEJDLENBQUMsRUFBN0IsRUFBaUM7QUFDN0JGLFNBQU8sR0FBR0EsT0FBTyxDQUFDRyxPQUFSLENBQWdCLHlCQUFoQixFQUEyQ0wsT0FBM0MsQ0FBVjtBQUNIOztBQUNERSxPQUFPLEdBQUdBLE9BQU8sQ0FBQ0csT0FBUixDQUFnQix5QkFBaEIsRUFBMkNKLElBQTNDLENBQVY7QUFHQUMsT0FBTyx3REFBUDtBQVNBSSxPQUFPLENBQUNDLElBQVIsQ0FBYUwsT0FBYjtBQUNBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE9BQWpCIiwiZmlsZSI6Ii4vYmlnSnNvblNxbENvZGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IHdyYXBwZXIgPSBgXG5AYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJie1xuICAgIEBhYXJycmFhcygxMDAwMDAwMClbXG4gICAgICAgIEBhYWFhYWFhYWEgMTExMTExMTExMTExMVxuICAgICAgICBAYmJiYmJiYmJiYiAyMjIyMjIyMjIyMjIyXG4gICAgICAgIEBjY2NjY2NjY2NjIDIyMjIyMjIyMjIyMjJcbiAgICAgICAgQGRkZGRkZGRkZGQgMjIyMjIyMjIyMjIyMlxuICAgICAgICBAZWVlZWVlZWVlZWVlZSAyMjIyMjIyMjIyMjIyXG4gICAgXVxuICAgIFxufVxuIyMjIyMjUExBQ0VIT0xERVIjIyMjIyNcbmBcblxuY29uc3QgbGFzdCA9IGBcbkBiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJ7XG4gICAgQGFhcnJyYWFzKDEwMDAwMDAwKVtcbiAgICAgICAgQGFhYWFhYWFhYSAxMTExMTExMTExMTExXG4gICAgICAgIEBiYmJiYmJiYmJiIDIyMjIyMjIyMjIyMjJcbiAgICAgICAgQGNjY2NjY2NjY2MgMjIyMjIyMjIyMjIyMlxuICAgICAgICBAZGRkZGRkZGRkZCAyMjIyMjIyMjIyMjIyXG4gICAgICAgIDFAZWVlZWVlZWVlZWVlZSAyMjIyMjIyMjIyMjIyXG4gICAgXVxufVxuYFxuXG5sZXQgbmV3Q29kZSA9IHdyYXBwZXJcbmNvbnN0IG1heE51bSA9IDFcbmZvciAobGV0IGkgPSAwOyBpIDwgbWF4TnVtOyBpKyspIHtcbiAgICBuZXdDb2RlID0gbmV3Q29kZS5yZXBsYWNlKCcjIyMjIyNQTEFDRUhPTERFUiMjIyMjIycsIHdyYXBwZXIpXG59XG5uZXdDb2RlID0gbmV3Q29kZS5yZXBsYWNlKCcjIyMjIyNQTEFDRUhPTERFUiMjIyMjIycsIGxhc3QpXG5cblxubmV3Q29kZSA9IGBcbkBhe1xuICAgIEBie1xuICAgICAgICBAY1xuICAgICAgICAxXG4gICAgfVxufVxuXG5gXG5jb25zb2xlLmluZm8obmV3Q29kZSlcbm1vZHVsZS5leHBvcnRzID0gbmV3Q29kZVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./bigJsonSqlCode.js\n");

/***/ }),

/***/ "./demo.js":
/*!*****************!*\
  !*** ./demo.js ***!
  \*****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const jsonsql = __webpack_require__(/*! ./index */ \"./index.js\")\n\n\n/*\nconst result = jsonsql.compile(`\n@data{ /// + string,null 描述\n    @code 0 /// int 状态码\n    @list(2)[\n        @name '张三' /// string 姓名\n        @age [222212,33223332]?? /// string 年龄\n    ]\n}\n`)\n*/\n\nconst bigJsonSqlCode = __webpack_require__(/*! ./bigJsonSqlCode */ \"./bigJsonSqlCode.js\")\nconsole.time('compile')\nconst result = jsonsql.compile(`\n    ${bigJsonSqlCode}\n`)\n// @2age 1 /// + string,null 年龄\n// @age2 2 /// - string,nll 年龄2\n// @age3 3\nconsole.timeEnd('compile')\nconsole.info(result)\n\n\nwindow.onfocus = function () {\n    // window.location.reload()\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vLmpzPzdlMTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsMkJBQVM7OztBQUdqQztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLG1CQUFPLENBQUMsNkNBQWtCO0FBQ2pEO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9kZW1vLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QganNvbnNxbCA9IHJlcXVpcmUoJy4vaW5kZXgnKVxuXG5cbi8qXG5jb25zdCByZXN1bHQgPSBqc29uc3FsLmNvbXBpbGUoYFxuQGRhdGF7IC8vLyArIHN0cmluZyxudWxsIOaPj+i/sFxuICAgIEBjb2RlIDAgLy8vIGludCDnirbmgIHnoIFcbiAgICBAbGlzdCgyKVtcbiAgICAgICAgQG5hbWUgJ+W8oOS4iScgLy8vIHN0cmluZyDlp5PlkI1cbiAgICAgICAgQGFnZSBbMjIyMjEyLDMzMjIzMzMyXT8/IC8vLyBzdHJpbmcg5bm06b6EXG4gICAgXVxufVxuYClcbiovXG5cbmNvbnN0IGJpZ0pzb25TcWxDb2RlID0gcmVxdWlyZSgnLi9iaWdKc29uU3FsQ29kZScpXG5jb25zb2xlLnRpbWUoJ2NvbXBpbGUnKVxuY29uc3QgcmVzdWx0ID0ganNvbnNxbC5jb21waWxlKGBcbiAgICAke2JpZ0pzb25TcWxDb2RlfVxuYClcbi8vIEAyYWdlIDEgLy8vICsgc3RyaW5nLG51bGwg5bm06b6EXG4vLyBAYWdlMiAyIC8vLyAtIHN0cmluZyxubGwg5bm06b6EMlxuLy8gQGFnZTMgM1xuY29uc29sZS50aW1lRW5kKCdjb21waWxlJylcbmNvbnNvbGUuaW5mbyhyZXN1bHQpXG5cblxud2luZG93Lm9uZm9jdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./demo.js\n");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib2 */ \"./lib2/index.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbmRleC5qcz80MWY1Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxtQkFBTyxDQUFDLCtCQUFELENBQXhCIiwiZmlsZSI6Ii4vaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliMicpXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./index.js\n");

/***/ }),

/***/ "./lib2/Compiler/Matchers.js":
/*!***********************************!*\
  !*** ./lib2/Compiler/Matchers.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar logger = {\n  created: false,\n  // 创建匹配器时\n  scaning: true // 开始扫描时\n\n};\nvar matchers = {};\n\nvar Matcher =\n/*#__PURE__*/\nfunction () {\n  function Matcher() {\n    var _this = this;\n\n    _classCallCheck(this, Matcher);\n\n    logger.created && console.warn(\"new \".concat(this.constructor.name), this);\n    var originScan = this.scan;\n\n    this.scan = function (parentRuntime) {\n      logger.scaning && console.warn(\"\".concat(_this.constructor.name, \" scaning \\u3010\").concat(parentRuntime.sr.chIndex, \"  \").concat(parentRuntime.sr.chNow, \"\\u3011\"), _this);\n      originScan.call(_this, parentRuntime);\n    };\n  }\n\n  _createClass(Matcher, [{\n    key: \"suffixNum\",\n    value: function suffixNum(m, n) {\n      // 匹配次数\n      // ? = {0,1}\n      // * = {0,Infinity}\n      // + = {1,Infinity}\n      // {m,n} = {m,n}\n      this.m = m;\n      this.n = n;\n    } // 执行扫描操作\n\n  }, {\n    key: \"scan\",\n    value: function scan() {\n      throw Error(\"Matcher.scan must be override by \".concat(this.constructor.name, \".scan\"));\n    }\n  }, {\n    key: \"match\",\n    value: function match() {\n      throw Error(\"Matcher.match must be override by \".concat(this.constructor.name, \".match\"));\n    }\n  }, {\n    key: \"matchSuccess\",\n    value: function matchSuccess() {\n      throw Error(\"Matcher.matchSuccess must be override by \".concat(this.constructor.name, \".matchSuccess\"));\n    }\n  }, {\n    key: \"matchFailure\",\n    value: function matchFailure() {\n      throw Error(\"Matcher.matchFailure must be override by \".concat(this.constructor.name, \".matchFailure\"));\n    }\n  }]);\n\n  return Matcher;\n}();\n\nMatcher.prototype.m = Matcher.prototype.n = 1;\n\nvar RootMatcher =\n/*#__PURE__*/\nfunction (_Matcher) {\n  _inherits(RootMatcher, _Matcher);\n\n  function RootMatcher(resolve, reject) {\n    var _this2;\n\n    _classCallCheck(this, RootMatcher);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(RootMatcher).call(this));\n    _this2.resolve = resolve;\n    _this2.reject = reject;\n    return _this2;\n  }\n\n  _createClass(RootMatcher, [{\n    key: \"matchFailure\",\n    value: function matchFailure(childRuntime, error) {\n      this.reject(childRuntime, error);\n    }\n  }, {\n    key: \"matchSuccess\",\n    value: function matchSuccess(childRuntime) {\n      this.resolve(childRuntime);\n    }\n  }]);\n\n  return RootMatcher;\n}(Matcher);\n\nvar HookMatcher =\n/*#__PURE__*/\nfunction (_Matcher2) {\n  _inherits(HookMatcher, _Matcher2);\n\n  function HookMatcher(id, _ref) {\n    var _this3;\n\n    var before = _ref.before,\n        done = _ref.done,\n        source = _ref.source;\n\n    _classCallCheck(this, HookMatcher);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(HookMatcher).call(this));\n    _this3._id = id;\n    _this3._hooks = {\n      before: before,\n      done: done\n    };\n    _this3._source = source;\n    _this3._child = _this3._parseSource(id, source);\n    matchers[id] = _assertThisInitialized(_this3);\n    return _this3;\n  }\n\n  _createClass(HookMatcher, [{\n    key: \"scan\",\n    value: function scan(parentRuntime) {\n      this._child.scan(parentRuntime.createChild(this));\n    }\n  }, {\n    key: \"matchSuccess\",\n    value: function matchSuccess(childRuntime) {\n      var thisRuntime = childRuntime.parent;\n      thisRuntime.appendChild(childRuntime);\n      thisRuntime.matchs++;\n\n      if (thisRuntime.matchs < this.n) {\n        // 继续下一个分量的扫描\n        this._child.scan(thisRuntime);\n      } else {\n        // 完成扫描\n        thisRuntime.resolve();\n      }\n    }\n  }, {\n    key: \"matchFailure\",\n    value: function matchFailure(childRuntime, error) {\n      var thisRuntime = childRuntime.parent;\n\n      if (thisRuntime.matchs < this.m) {\n        // 当前必选项匹配不足，则匹配失败\n        thisRuntime.reject(error);\n      } else {\n        thisRuntime.resolve();\n      }\n    }\n  }, {\n    key: \"_parseSource\",\n    value: function _parseSource(id, source) {\n      var curMatcher;\n\n      if (typeof source === 'function') {\n        curMatcher = new GroupMatcher(id);\n        curMatcher.putChild(new RuleMatcher(id, source));\n        curMatcher.putEnd();\n        return curMatcher;\n      }\n\n      var groupStack = [];\n      var groupParserRegExp = RegExp([/'((?:[^']|\\\\\\\\|\\\\')+)'/, // 匹配字符串\n      /<(\\w+)>/, // 匹配link\n      /(\\()/, /(\\))/, // 匹配分组\n      /([?*+]|\\{\\d+\\}|\\{\\d+,(?:\\d+)?\\}|\\{,\\d+\\})/, // \"?\", \"*\", \"+\", \"{n}\", \"{m,}\", \"{m,n}\", \"{,n}\"\n      /(\\|)/ // \"|\"\n      ].map(function (item) {\n        return item.source;\n      }).join('|'), 'g');\n\n      var groupStackTop = function groupStackTop() {\n        return groupStack[groupStack.length - 1];\n      };\n\n      var groupParser = function groupParser(all, matchString, matchLinkName, matchGroupOpen, matchGroupClose, matchSuffixNum, matchOr) {\n        switch (false) {\n          case !matchString:\n            {\n              curMatcher = groupStackTop();\n              var newMatcher = new StringMatcher(matchString);\n              curMatcher.putChild(newMatcher);\n              curMatcher = newMatcher;\n              break;\n            }\n\n          case !matchLinkName:\n            {\n              curMatcher = groupStackTop();\n\n              var _newMatcher = new LinkMatcher(matchLinkName);\n\n              curMatcher.putChild(_newMatcher);\n              curMatcher = _newMatcher;\n              break;\n            }\n\n          case !matchGroupOpen:\n            {\n              curMatcher = groupStackTop();\n\n              var _newMatcher2 = new GroupMatcher();\n\n              curMatcher.putChild(_newMatcher2);\n              curMatcher = _newMatcher2;\n              groupStack.push(curMatcher);\n              break;\n            }\n\n          case !matchGroupClose:\n            {\n              curMatcher = groupStack.pop();\n              curMatcher.putEnd();\n              break;\n            }\n\n          case !matchSuffixNum:\n            {\n              switch (matchSuffixNum) {\n                case '?':\n                  {\n                    curMatcher.suffixNum(0, 1);\n                    break;\n                  }\n\n                case '*':\n                  {\n                    curMatcher.suffixNum(0, Infinity);\n                    break;\n                  }\n\n                case '+':\n                  {\n                    curMatcher.suffixNum(1, Infinity);\n                    break;\n                  }\n\n                default:\n                  {\n                    matchSuffixNum = matchSuffixNum.slice(1, -1).split(',');\n\n                    if (matchSuffixNum.length === 1) {\n                      curMatcher.suffixNum(+matchSuffixNum[0], +matchSuffixNum[0]);\n                    } else {\n                      curMatcher.suffixNum(+matchSuffixNum[0] || 0, +matchSuffixNum[1] || Infinity);\n                    }\n                  }\n              }\n\n              break;\n            }\n\n          case !matchOr:\n            {\n              curMatcher = groupStackTop();\n              curMatcher.putOr();\n              break;\n            }\n        }\n      };\n\n      if (typeof source === 'string') {\n        curMatcher = new GroupMatcher(id);\n        groupStack.push(curMatcher);\n        source.replace(/\\/\\/\\/|\\/\\*[\\w\\W]*\\*\\//g, '').replace(groupParserRegExp, groupParser);\n        curMatcher = groupStack.pop();\n        curMatcher.putEnd();\n        return curMatcher;\n      }\n\n      throw Error(\"Compiler.option.mathcers.\".concat(this.key, \".source must be a function or string\"));\n    }\n  }]);\n\n  return HookMatcher;\n}(Matcher);\n\nvar GroupMatcher =\n/*#__PURE__*/\nfunction (_Matcher3) {\n  _inherits(GroupMatcher, _Matcher3);\n\n  function GroupMatcher() {\n    var _this4;\n\n    _classCallCheck(this, GroupMatcher);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(GroupMatcher).call(this));\n    _this4._tempOr = null;\n    _this4._tempAnd = null;\n    _this4._orFirstChild = null;\n    return _this4;\n  } // 插入子级\n\n\n  _createClass(GroupMatcher, [{\n    key: \"putChild\",\n    value: function putChild(matcher) {\n      var _tempOr = this._tempOr,\n          _tempAnd = this._tempAnd;\n\n      if (_tempOr) {\n        // 已经存在or节点\n        // 继续添加and节点\n        if (_tempAnd) {\n          _tempAnd.nextSibling = matcher;\n          matcher.previousSibling = _tempAnd;\n          this._tempAnd = matcher;\n        } else {\n          this._tempOr = _tempOr.nextSibling = {\n            andFirstChild: this._tempAnd = matcher\n          };\n        }\n      } else {\n        this._orFirstChild = this._tempOr = {\n          andFirstChild: this._tempAnd = matcher\n        };\n      }\n\n      matcher.parentNode = this;\n      this._tempAnd.groupParent = this._tempOr; // 子级链回父级分组or，回溯的使用使用\n    } // 插入新的or分支\n\n  }, {\n    key: \"putOr\",\n    value: function putOr() {\n      this._tempAnd = null;\n    } // 完成节点创建\n\n  }, {\n    key: \"putEnd\",\n    value: function putEnd() {\n      delete this._tempOr;\n      delete this._tempAnd;\n    }\n  }, {\n    key: \"scan\",\n    value: function scan(parentRuntime) {\n      var orChild = this._orFirstChild;\n      var andChild = orChild.andFirstChild;\n      andChild.scan(parentRuntime.createChild(this, {\n        orChild: orChild,\n        andChild: andChild,\n        tempChilds: []\n      }));\n    }\n  }, {\n    key: \"matchSuccess\",\n    value: function matchSuccess(childRuntime) {\n      // (A{3} B{1,2} | A{2} B{2})\n      // 子项扫描成功，则判断是否是最后项，是则进行下一个分量扫描，否则继续下一个子项扫描\n      var thisRuntime = childRuntime.parent;\n      var andChild = thisRuntime.andChild;\n\n      if (thisRuntime.tempLastChild) {\n        thisRuntime.tempLastChild.nextSibling = childRuntime;\n        childRuntime.previousSibling = thisRuntime.tempLastChild;\n        thisRuntime.tempLastChild = childRuntime;\n      } else {\n        thisRuntime.tempLastChild = thisRuntime.tempFirstChild = childRuntime;\n      } // 存在下一个子项\n\n\n      if (andChild.nextSibling) {\n        andChild = thisRuntime.andChild = andChild.nextSibling;\n        andChild.scan(thisRuntime);\n      } else {\n        thisRuntime.tempChilds.push({\n          firstChild: thisRuntime.tempFirstChild,\n          lastChild: thisRuntime.tempLastChild\n        });\n        thisRuntime.tempFirstChild = thisRuntime.tempLastChild = null;\n        thisRuntime.matchs++;\n\n        if (thisRuntime.matchs < this.n) {\n          // 继续下一个分量的扫描\n          thisRuntime.orChild = this._orFirstChild;\n          thisRuntime.andChild = thisRuntime.orChild.andFirstChild;\n          thisRuntime.andChild.scan(thisRuntime);\n        } else {\n          // 已经完成了所有的扫描\n          this._resolve(thisRuntime);\n        }\n      }\n    }\n  }, {\n    key: \"matchFailure\",\n    value: function matchFailure(childRuntime, error) {\n      var thisRuntime = childRuntime.parent; // 回退当前扫描结果\n\n      if (thisRuntime.tempFirstChild) {\n        thisRuntime.sr.moveTo(thisRuntime.tempFirstChild.bIndex);\n        thisRuntime.tempFirstChild = thisRuntime.tempLastChild = null;\n      } // 进入或分支进行扫描\n\n\n      if (thisRuntime.orChild.nextSibling) {\n        // 储存当前错误，进入或分支扫描\n        // 假如新的错误扫描的更远，则更新错误\n        thisRuntime.error = thisRuntime.error && thisRuntime.error.bIndex >= error.bIndex ? thisRuntime.error : error;\n        console.info('######## or分支', thisRuntime);\n        thisRuntime.orChild = thisRuntime.orChild.nextSibling;\n        thisRuntime.andChild = thisRuntime.orChild.andFirstChild;\n        thisRuntime.andChild.scan(thisRuntime);\n      } else {\n        if (thisRuntime.matchs < this.m) {\n          thisRuntime.error = thisRuntime.error && thisRuntime.error.bIndex >= error.bIndex ? thisRuntime.error : error;\n          console.info('######## 全部错误', thisRuntime);\n          thisRuntime.reject(thisRuntime.error);\n        } else {\n          this._resolve(thisRuntime);\n        }\n      }\n    }\n  }, {\n    key: \"_resolve\",\n    value: function _resolve(thisRuntime) {\n      var nowLastChild;\n\n      for (var i = 0; i < thisRuntime.tempChilds.length; i++) {\n        var _thisRuntime$tempChil = thisRuntime.tempChilds[i],\n            firstChild = _thisRuntime$tempChil.firstChild,\n            lastChild = _thisRuntime$tempChil.lastChild;\n\n        if (nowLastChild) {\n          nowLastChild.nextSibling = firstChild;\n          nowLastChild = thisRuntime.lastChild = lastChild;\n        } else {\n          thisRuntime.firstChild = firstChild;\n          nowLastChild = thisRuntime.lastChild = lastChild;\n        }\n      }\n\n      delete thisRuntime.tempChilds;\n      delete thisRuntime.tempFirstChild;\n      delete thisRuntime.tempLastChild;\n      delete thisRuntime.error;\n      thisRuntime.resolve();\n    }\n  }]);\n\n  return GroupMatcher;\n}(Matcher);\n\nvar LinkMatcher =\n/*#__PURE__*/\nfunction (_Matcher4) {\n  _inherits(LinkMatcher, _Matcher4);\n\n  function LinkMatcher(id) {\n    var _this5;\n\n    _classCallCheck(this, LinkMatcher);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(LinkMatcher).call(this));\n    _this5._id = id;\n    return _this5;\n  }\n\n  _createClass(LinkMatcher, [{\n    key: \"scan\",\n    value: function scan(parentRuntime) {\n      matchers[this._id].scan(parentRuntime.createChild(this));\n    }\n  }, {\n    key: \"matchSuccess\",\n    value: function matchSuccess(childRuntime) {\n      var thisRuntime = childRuntime.parent;\n      thisRuntime.appendChild(childRuntime);\n      thisRuntime.matchs++;\n\n      if (thisRuntime.matchs < this.n) {\n        // 继续下一个分量的扫描\n        matchers[this._id].scan(thisRuntime);\n      } else {\n        // 完成扫描\n        thisRuntime.resolve();\n      }\n    }\n  }, {\n    key: \"matchFailure\",\n    value: function matchFailure(childRuntime, error) {\n      var thisRuntime = childRuntime.parent;\n\n      if (thisRuntime.matchs < this.m) {\n        // 当前必选项匹配不足，则匹配失败\n        thisRuntime.reject(error);\n      } else {\n        thisRuntime.resolve();\n      }\n    }\n  }]);\n\n  return LinkMatcher;\n}(Matcher);\n\nvar RuleMatcher =\n/*#__PURE__*/\nfunction (_Matcher5) {\n  _inherits(RuleMatcher, _Matcher5);\n\n  function RuleMatcher(id, match) {\n    var _this6;\n\n    _classCallCheck(this, RuleMatcher);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(RuleMatcher).call(this));\n    _this6._id = id;\n    _this6._match = match;\n    matchers[id] = _assertThisInitialized(_this6);\n    return _this6;\n  }\n\n  _createClass(RuleMatcher, [{\n    key: \"scan\",\n    value: function scan(parentRuntime) {\n      var sr = parentRuntime.sr;\n      var bIndex = sr.chIndex;\n      var thisRuntime = parentRuntime.createChild(this);\n      sr.createRecord();\n\n      if (this._match(sr)) {\n        sr.removeRecord();\n        thisRuntime.resolve(bIndex, sr.chIndex);\n      } else {\n        sr.rollback();\n        thisRuntime.reject(bIndex);\n      }\n    }\n  }]);\n\n  return RuleMatcher;\n}(Matcher);\n\nvar StringMatcher =\n/*#__PURE__*/\nfunction (_Matcher6) {\n  _inherits(StringMatcher, _Matcher6);\n\n  function StringMatcher(source) {\n    var _this7;\n\n    _classCallCheck(this, StringMatcher);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(StringMatcher).call(this));\n    _this7._source = source;\n    return _this7;\n  }\n\n  _createClass(StringMatcher, [{\n    key: \"scan\",\n    value: function scan(parentRuntime) {\n      var sr = parentRuntime.sr;\n      var thisRuntime = parentRuntime.createChild(this);\n      var bIndex = sr.chIndex;\n      var m = this.m,\n          n = this.n;\n      var isSuccess = true; // 必选集\n\n      sr.createRecord();\n\n      for (var i = 0; i < m; i++) {\n        if (!this._match(sr)) {\n          isSuccess = false;\n          sr.rollback();\n          break;\n        }\n      }\n\n      if (isSuccess) {\n        sr.removeRecord(); // 可选集\n\n        for (var _i = m; _i < n; _i++) {\n          sr.createRecord();\n\n          if (!this._match(sr)) {\n            sr.rollback();\n            break;\n          } else {\n            sr.removeRecord();\n          }\n        }\n\n        thisRuntime.resolve(bIndex, sr.chIndex);\n      } else {\n        thisRuntime.reject(bIndex);\n      }\n    }\n  }, {\n    key: \"_match\",\n    value: function _match(sr) {\n      var source = this._source;\n\n      for (var i = 0, lg = source.length; i < lg; i++) {\n        if (sr.read() !== source[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }]);\n\n  return StringMatcher;\n}(Matcher);\n\nmodule.exports = {\n  RootMatcher: RootMatcher,\n  RuleMatcher: RuleMatcher,\n  HookMatcher: HookMatcher\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib2/Compiler/Matchers.js\n");

/***/ }),

/***/ "./lib2/Compiler/Runtime.js":
/*!**********************************!*\
  !*** ./lib2/Compiler/Runtime.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar logger = {\n  create: !true,\n  resolve: true,\n  reject: true\n};\nvar PID = 0;\n\nvar Runtime =\n/*#__PURE__*/\nfunction () {\n  function Runtime(parent, matcher, extral) {\n    _classCallCheck(this, Runtime);\n\n    this.PID = PID++;\n    this.parent = parent;\n    this.matcher = matcher;\n    this.matchs = 0; // 成功匹配次数\n\n    if (parent) {\n      this.sr = parent.sr;\n    }\n\n    if (extral) {\n      Object.assign(this, extral);\n    }\n\n    logger.create && console.warn(\"\".concat(matcher.constructor.name, \" Runtime created\"), this);\n  }\n\n  _createClass(Runtime, [{\n    key: \"createChild\",\n    value: function createChild(matcher, extral) {\n      return new Runtime(this, matcher, extral);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(childRuntime) {\n      if (this.lastChild) {\n        this.lastChild.nextSibling = childRuntime;\n        childRuntime.previousSibling = this.lastChild;\n        this.lastChild = childRuntime;\n      } else {\n        this.firstChild = this.lastChild = childRuntime;\n      }\n    } // 匹配器完成扫描\n\n  }, {\n    key: \"resolve\",\n    value: function resolve(bIndex, eIndex) {\n      if (eIndex != null) {\n        this.bIndex = bIndex;\n        this.eIndex = eIndex;\n      } else if (this.firstChild) {\n        this.bIndex = this.firstChild.bIndex;\n        this.eIndex = this.lastChild.eIndex;\n      } else {\n        // 0次匹配的节点\n        this.bIndex = this.sr.chIndex;\n        this.eIndex = this.sr.chIndex;\n      }\n\n      logger.resolve && console.warn(\"\".concat(this.matcher.constructor.name, \" resolve \").concat(this.matcher._id), this.sr.text(this.bIndex, this.eIndex)); // 触发父级子项扫描成功\n\n      this.parent.matcher.matchSuccess(this);\n    }\n  }, {\n    key: \"reject\",\n    value: function reject(error) {\n      logger.reject && console.warn(\"\".concat(this.matcher.constructor.name, \" reject\"), this.matcher, error);\n\n      if (typeof error === 'number') {\n        error = {\n          stack: [this],\n          message: '匹配错误',\n          bIndex: error,\n          text: this.sr.text(error)\n        };\n      } else if (_typeof(error) === 'object') {\n        error.stack.push(this);\n      }\n\n      this.parent.matcher.matchFailure(this, error);\n    }\n  }]);\n\n  return Runtime;\n}();\n\nRuntime.prototype.resolve = killRecursion(Runtime.prototype.resolve);\nRuntime.prototype.reject = killRecursion(Runtime.prototype.reject);\nmodule.exports = Runtime;\n\nfunction killRecursion(recursion) {\n  var scanIsRun = false;\n  var contextArgs;\n  var contextThat;\n  return function () {\n    contextArgs = arguments;\n    contextThat = this;\n\n    if (!scanIsRun) {\n      // console.info('startScan')\n      scanIsRun = true;\n\n      while (contextArgs) {\n        var args = contextArgs;\n        contextArgs = null;\n        recursion.apply(contextThat, args);\n      }\n\n      scanIsRun = false;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib2/Compiler/Runtime.js\n");

/***/ }),

/***/ "./lib2/Compiler/index.js":
/*!********************************!*\
  !*** ./lib2/Compiler/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = __webpack_require__(/*! ./Matchers */ \"./lib2/Compiler/Matchers.js\"),\n    RuleMatcher = _require.RuleMatcher,\n    HookMatcher = _require.HookMatcher;\n\nvar scanner = __webpack_require__(/*! ./scanner */ \"./lib2/Compiler/scanner.js\");\n\nvar Compiler =\n/*#__PURE__*/\nfunction () {\n  function Compiler(_ref) {\n    var matchers = _ref.matchers;\n\n    _classCallCheck(this, Compiler);\n\n    this._matchers = {};\n\n    this._initSystemMatchers();\n\n    this._initCustomMatchers(matchers);\n  }\n\n  _createClass(Compiler, [{\n    key: \"_initSystemMatchers\",\n    value: function _initSystemMatchers() {\n      var matchers = this._matchers;\n      [['w', function (sr) {\n        return /\\w/.test(sr.read());\n      }], ['W', function (sr) {\n        return /\\W/.test(sr.read());\n      }], ['d', function (sr) {\n        return /\\d/.test(sr.read());\n      }], ['D', function (sr) {\n        return /\\D/.test(sr.read());\n      }], ['s', function (sr) {\n        return /\\s/.test(sr.read());\n      }], ['S', function (sr) {\n        return /\\S/.test(sr.read());\n      }], ['eol', function (sr) {\n        return sr.read() === sr.EOL;\n      }], ['.', function (sr) {\n        return sr.read() !== sr.EOL;\n      }]].forEach(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            id = _ref3[0],\n            pattern = _ref3[1];\n\n        matchers[id] = new RuleMatcher(id, pattern);\n      });\n    }\n  }, {\n    key: \"_initCustomMatchers\",\n    value: function _initCustomMatchers(matcherOptions) {\n      var matchers = this._matchers;\n\n      for (var id in matcherOptions) {\n        matchers[id] = new HookMatcher(id, matcherOptions[id], this);\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run(code) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n      var sr = scanner(code);\n      var mainMatcher = this._matchers[id];\n      var maxNum = 0;\n\n      try {\n        while (sr.notEOF() && maxNum++ < Infinity) {\n          sr.use(mainMatcher);\n        }\n\n        return sr.tree();\n      } catch (err) {\n        return sr.error(err);\n      }\n    }\n  }, {\n    key: \"compile\",\n    value: function compile(code) {\n      console.warn(\"input compile code is \\u3010\".concat(code, \"\\u3011\"), this);\n    }\n  }]);\n\n  return Compiler;\n}();\n\nmodule.exports = Compiler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIyL0NvbXBpbGVyL2luZGV4LmpzPzFkM2MiXSwibmFtZXMiOlsicmVxdWlyZSIsIlJ1bGVNYXRjaGVyIiwiSG9va01hdGNoZXIiLCJzY2FubmVyIiwiQ29tcGlsZXIiLCJtYXRjaGVycyIsIl9tYXRjaGVycyIsIl9pbml0U3lzdGVtTWF0Y2hlcnMiLCJfaW5pdEN1c3RvbU1hdGNoZXJzIiwic3IiLCJ0ZXN0IiwicmVhZCIsIkVPTCIsImZvckVhY2giLCJpZCIsInBhdHRlcm4iLCJtYXRjaGVyT3B0aW9ucyIsImNvZGUiLCJtYWluTWF0Y2hlciIsIm1heE51bSIsIm5vdEVPRiIsIkluZmluaXR5IiwidXNlIiwidHJlZSIsImVyciIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztlQUNxQ0EsbUJBQU8sQ0FBQywrQ0FBRCxDO0lBQXBDQyxXLFlBQUFBLFc7SUFBYUMsVyxZQUFBQSxXOztBQUNyQixJQUFNQyxPQUFPLEdBQUdILG1CQUFPLENBQUMsNkNBQUQsQ0FBdkI7O0lBRU1JLFE7OztBQUNGLDBCQUEyQjtBQUFBLFFBQVpDLFFBQVksUUFBWkEsUUFBWTs7QUFBQTs7QUFDdkIsU0FBS0MsU0FBTCxHQUFpQixFQUFqQjs7QUFDQSxTQUFLQyxtQkFBTDs7QUFDQSxTQUFLQyxtQkFBTCxDQUF5QkgsUUFBekI7QUFDSDs7OzswQ0FHc0I7QUFDbkIsVUFBTUEsUUFBUSxHQUFHLEtBQUtDLFNBQXRCO0FBQ0MsT0FDRyxDQUFFLEdBQUYsRUFBTyxVQUFBRyxFQUFFO0FBQUEsZUFBSSxLQUFLQyxJQUFMLENBQVVELEVBQUUsQ0FBQ0UsSUFBSCxFQUFWLENBQUo7QUFBQSxPQUFULENBREgsRUFFRyxDQUFFLEdBQUYsRUFBTyxVQUFBRixFQUFFO0FBQUEsZUFBSSxLQUFLQyxJQUFMLENBQVVELEVBQUUsQ0FBQ0UsSUFBSCxFQUFWLENBQUo7QUFBQSxPQUFULENBRkgsRUFHRyxDQUFFLEdBQUYsRUFBTyxVQUFBRixFQUFFO0FBQUEsZUFBSSxLQUFLQyxJQUFMLENBQVVELEVBQUUsQ0FBQ0UsSUFBSCxFQUFWLENBQUo7QUFBQSxPQUFULENBSEgsRUFJRyxDQUFFLEdBQUYsRUFBTyxVQUFBRixFQUFFO0FBQUEsZUFBSSxLQUFLQyxJQUFMLENBQVVELEVBQUUsQ0FBQ0UsSUFBSCxFQUFWLENBQUo7QUFBQSxPQUFULENBSkgsRUFLRyxDQUFFLEdBQUYsRUFBTyxVQUFBRixFQUFFO0FBQUEsZUFBSSxLQUFLQyxJQUFMLENBQVVELEVBQUUsQ0FBQ0UsSUFBSCxFQUFWLENBQUo7QUFBQSxPQUFULENBTEgsRUFNRyxDQUFFLEdBQUYsRUFBTyxVQUFBRixFQUFFO0FBQUEsZUFBSSxLQUFLQyxJQUFMLENBQVVELEVBQUUsQ0FBQ0UsSUFBSCxFQUFWLENBQUo7QUFBQSxPQUFULENBTkgsRUFPRyxDQUFFLEtBQUYsRUFBUyxVQUFBRixFQUFFO0FBQUEsZUFBSUEsRUFBRSxDQUFDRSxJQUFILE9BQWNGLEVBQUUsQ0FBQ0csR0FBckI7QUFBQSxPQUFYLENBUEgsRUFRRyxDQUFFLEdBQUYsRUFBTyxVQUFBSCxFQUFFO0FBQUEsZUFBSUEsRUFBRSxDQUFDRSxJQUFILE9BQWNGLEVBQUUsQ0FBQ0csR0FBckI7QUFBQSxPQUFULENBUkgsRUFTQ0MsT0FURCxDQVNTLGlCQUFxQjtBQUFBO0FBQUEsWUFBbEJDLEVBQWtCO0FBQUEsWUFBZEMsT0FBYzs7QUFDM0JWLGdCQUFRLENBQUNTLEVBQUQsQ0FBUixHQUFlLElBQUliLFdBQUosQ0FBZ0JhLEVBQWhCLEVBQW9CQyxPQUFwQixDQUFmO0FBQ0gsT0FYQTtBQVlKOzs7d0NBRW9CQyxjLEVBQWdCO0FBQ2pDLFVBQU1YLFFBQVEsR0FBRyxLQUFLQyxTQUF0Qjs7QUFDQSxXQUFLLElBQU1RLEVBQVgsSUFBaUJFLGNBQWpCLEVBQWlDO0FBQzdCWCxnQkFBUSxDQUFDUyxFQUFELENBQVIsR0FBZSxJQUFJWixXQUFKLENBQWdCWSxFQUFoQixFQUFvQkUsY0FBYyxDQUFDRixFQUFELENBQWxDLEVBQXdDLElBQXhDLENBQWY7QUFDSDtBQUNKOzs7d0JBR0lHLEksRUFBbUI7QUFBQSxVQUFiSCxFQUFhLHVFQUFSLE1BQVE7QUFDcEIsVUFBTUwsRUFBRSxHQUFHTixPQUFPLENBQUNjLElBQUQsQ0FBbEI7QUFDQSxVQUFNQyxXQUFXLEdBQUcsS0FBS1osU0FBTCxDQUFlUSxFQUFmLENBQXBCO0FBQ0EsVUFBSUssTUFBTSxHQUFHLENBQWI7O0FBQ0EsVUFBSTtBQUNBLGVBQU9WLEVBQUUsQ0FBQ1csTUFBSCxNQUFlRCxNQUFNLEtBQUtFLFFBQWpDLEVBQTJDO0FBQ3ZDWixZQUFFLENBQUNhLEdBQUgsQ0FBT0osV0FBUDtBQUNIOztBQUNELGVBQU9ULEVBQUUsQ0FBQ2MsSUFBSCxFQUFQO0FBQ0gsT0FMRCxDQUtFLE9BQU9DLEdBQVAsRUFBWTtBQUNWLGVBQU9mLEVBQUUsQ0FBQ2dCLEtBQUgsQ0FBU0QsR0FBVCxDQUFQO0FBQ0g7QUFDSjs7OzRCQUVRUCxJLEVBQU07QUFDWFMsYUFBTyxDQUFDQyxJQUFSLHVDQUF1Q1YsSUFBdkMsYUFBZ0QsSUFBaEQ7QUFDSDs7Ozs7O0FBSUxXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnpCLFFBQWpCIiwiZmlsZSI6Ii4vbGliMi9Db21waWxlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgeyBSdWxlTWF0Y2hlciwgSG9va01hdGNoZXIgfSA9IHJlcXVpcmUoJy4vTWF0Y2hlcnMnKVxuY29uc3Qgc2Nhbm5lciA9IHJlcXVpcmUoJy4vc2Nhbm5lcicpXG5cbmNsYXNzIENvbXBpbGVyIHtcbiAgICBjb25zdHJ1Y3RvciAoeyBtYXRjaGVycyB9KSB7XG4gICAgICAgIHRoaXMuX21hdGNoZXJzID0ge31cbiAgICAgICAgdGhpcy5faW5pdFN5c3RlbU1hdGNoZXJzKClcbiAgICAgICAgdGhpcy5faW5pdEN1c3RvbU1hdGNoZXJzKG1hdGNoZXJzKVxuICAgIH1cblxuXG4gICAgX2luaXRTeXN0ZW1NYXRjaGVycyAoKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXJzID0gdGhpcy5fbWF0Y2hlcnNcbiAgICAgICAgO1tcbiAgICAgICAgICAgIFsgJ3cnLCBzciA9PiAvXFx3Ly50ZXN0KHNyLnJlYWQoKSkgXSxcbiAgICAgICAgICAgIFsgJ1cnLCBzciA9PiAvXFxXLy50ZXN0KHNyLnJlYWQoKSkgXSxcbiAgICAgICAgICAgIFsgJ2QnLCBzciA9PiAvXFxkLy50ZXN0KHNyLnJlYWQoKSkgXSxcbiAgICAgICAgICAgIFsgJ0QnLCBzciA9PiAvXFxELy50ZXN0KHNyLnJlYWQoKSkgXSxcbiAgICAgICAgICAgIFsgJ3MnLCBzciA9PiAvXFxzLy50ZXN0KHNyLnJlYWQoKSkgXSxcbiAgICAgICAgICAgIFsgJ1MnLCBzciA9PiAvXFxTLy50ZXN0KHNyLnJlYWQoKSkgXSxcbiAgICAgICAgICAgIFsgJ2VvbCcsIHNyID0+IHNyLnJlYWQoKSA9PT0gc3IuRU9MIF0sXG4gICAgICAgICAgICBbICcuJywgc3IgPT4gc3IucmVhZCgpICE9PSBzci5FT0wgXSxcbiAgICAgICAgXS5mb3JFYWNoKChbIGlkLCBwYXR0ZXJuIF0pID0+IHtcbiAgICAgICAgICAgIG1hdGNoZXJzW2lkXSA9IG5ldyBSdWxlTWF0Y2hlcihpZCwgcGF0dGVybilcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBfaW5pdEN1c3RvbU1hdGNoZXJzIChtYXRjaGVyT3B0aW9ucykge1xuICAgICAgICBjb25zdCBtYXRjaGVycyA9IHRoaXMuX21hdGNoZXJzXG4gICAgICAgIGZvciAoY29uc3QgaWQgaW4gbWF0Y2hlck9wdGlvbnMpIHtcbiAgICAgICAgICAgIG1hdGNoZXJzW2lkXSA9IG5ldyBIb29rTWF0Y2hlcihpZCwgbWF0Y2hlck9wdGlvbnNbaWRdLCB0aGlzKVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBydW4gKGNvZGUsIGlkID0gJ21haW4nKSB7XG4gICAgICAgIGNvbnN0IHNyID0gc2Nhbm5lcihjb2RlKVxuICAgICAgICBjb25zdCBtYWluTWF0Y2hlciA9IHRoaXMuX21hdGNoZXJzW2lkXVxuICAgICAgICBsZXQgbWF4TnVtID0gMFxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgd2hpbGUgKHNyLm5vdEVPRigpICYmIG1heE51bSsrIDwgSW5maW5pdHkpIHtcbiAgICAgICAgICAgICAgICBzci51c2UobWFpbk1hdGNoZXIpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3IudHJlZSgpXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgcmV0dXJuIHNyLmVycm9yKGVycilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbXBpbGUgKGNvZGUpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBpbnB1dCBjb21waWxlIGNvZGUgaXMg44CQJHtjb2RlfeOAkWAsIHRoaXMpXG4gICAgfVxufVxuXG5cbm1vZHVsZS5leHBvcnRzID0gQ29tcGlsZXJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib2/Compiler/index.js\n");

/***/ }),

/***/ "./lib2/Compiler/scanner.js":
/*!**********************************!*\
  !*** ./lib2/Compiler/scanner.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar Runtime = __webpack_require__(/*! ./Runtime */ \"./lib2/Compiler/Runtime.js\");\n\nvar _require = __webpack_require__(/*! ./Matchers */ \"./lib2/Compiler/Matchers.js\"),\n    RootMatcher = _require.RootMatcher;\n\nmodule.exports = scanner;\n\nfunction scanner(code) {\n  var BOF = {},\n      EOF = {},\n      EOL = '\\n';\n  var chAlls = [],\n      chMaps = [];\n\n  (function () {\n    var lineNum = -1; // 原始行标，因为要对空行进行过滤\n\n    code.split(/\\r\\n?|\\r?\\n/).forEach(function (line) {\n      line = line.trim();\n      lineNum++;\n\n      if (!line) {\n        return;\n      }\n\n      var document;\n      line = line.replace(/\\/\\/(\\/)? .+/, function (matched, isDocument) {\n        if (isDocument) {\n          document = matched;\n        }\n\n        return '';\n      }).trim();\n\n      if (!line) {\n        return;\n      }\n\n      var bIndex = chAlls.length;\n      chAlls.push.apply(chAlls, _toConsumableArray(line.split('')).concat(['\\n']));\n      var eIndex = chAlls.length;\n      chMaps.push([lineNum, bIndex, eIndex, document]);\n    });\n  })();\n\n  var recordStack = [];\n  var sr = {\n    EOF: EOF,\n    EOL: EOL,\n    chIndex: 0,\n    chNow: BOF,\n    notEOF: function notEOF() {\n      return sr.chIndex < chAlls.length;\n    },\n    use: function use(matcher) {\n      // console.info('use', sr.chIndex, chAlls)\n      matcher.scan(new Runtime(null, new RootMatcher(function (thisRuntime) {// console.info('resolve===', thisRuntime)\n      }, function (thisRuntime, error) {\n        console.info(thisRuntime, error);\n        throw Error('解析出错啦');\n      }), {\n        sr: sr\n      }));\n    },\n    read: function read() {\n      if (sr.chIndex === chAlls.length) {\n        // 处于文件结尾\n        throw Error('ch已经到达结尾');\n      }\n\n      return sr.chNow = chAlls[sr.chIndex++];\n    },\n    back: function back() {\n      return sr.chNow = chAlls[--sr.chIndex];\n    },\n    error: function error(err) {\n      console.error(err);\n    },\n    moveTo: function moveTo(chIndex) {\n      return sr.chNow = chAlls[sr.chIndex = chIndex];\n    },\n    createRecord: function createRecord() {\n      return recordStack.push(sr.chIndex);\n    },\n    removeRecord: function removeRecord() {\n      return recordStack.pop();\n    },\n    rollback: function rollback() {\n      return sr.moveTo(recordStack.pop());\n    },\n    text: function text(bIndex, eIndex) {\n      return chAlls.slice(bIndex, eIndex).join('');\n    }\n  };\n  return sr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIyL0NvbXBpbGVyL3NjYW5uZXIuanM/MWRkYiJdLCJuYW1lcyI6WyJSdW50aW1lIiwicmVxdWlyZSIsIlJvb3RNYXRjaGVyIiwibW9kdWxlIiwiZXhwb3J0cyIsInNjYW5uZXIiLCJjb2RlIiwiQk9GIiwiRU9GIiwiRU9MIiwiY2hBbGxzIiwiY2hNYXBzIiwibGluZU51bSIsInNwbGl0IiwiZm9yRWFjaCIsImxpbmUiLCJ0cmltIiwiZG9jdW1lbnQiLCJyZXBsYWNlIiwibWF0Y2hlZCIsImlzRG9jdW1lbnQiLCJiSW5kZXgiLCJsZW5ndGgiLCJwdXNoIiwiZUluZGV4IiwicmVjb3JkU3RhY2siLCJzciIsImNoSW5kZXgiLCJjaE5vdyIsIm5vdEVPRiIsInVzZSIsIm1hdGNoZXIiLCJzY2FuIiwidGhpc1J1bnRpbWUiLCJlcnJvciIsImNvbnNvbGUiLCJpbmZvIiwiRXJyb3IiLCJyZWFkIiwiYmFjayIsImVyciIsIm1vdmVUbyIsImNyZWF0ZVJlY29yZCIsInJlbW92ZVJlY29yZCIsInBvcCIsInJvbGxiYWNrIiwidGV4dCIsInNsaWNlIiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLG1CQUFPLENBQUMsNkNBQUQsQ0FBdkI7O2VBQ3dCQSxtQkFBTyxDQUFDLCtDQUFELEM7SUFBdkJDLFcsWUFBQUEsVzs7QUFFUkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxPQUFqQjs7QUFFQSxTQUFTQSxPQUFULENBQWtCQyxJQUFsQixFQUF3QjtBQUFBLE1BQ1pDLEdBRFksR0FDUSxFQURSO0FBQUEsTUFDUEMsR0FETyxHQUNZLEVBRFo7QUFBQSxNQUNGQyxHQURFLEdBQ2dCLElBRGhCO0FBQUEsTUFFWkMsTUFGWSxHQUVTLEVBRlQ7QUFBQSxNQUVKQyxNQUZJLEdBRWEsRUFGYjs7QUFLbkIsR0FBQyxZQUFNO0FBQ0osUUFBSUMsT0FBTyxHQUFHLENBQUMsQ0FBZixDQURJLENBQ2E7O0FBQ2pCTixR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Q0FBQ21CLEdBQVosRUFBTjtBQUFBLEtBNUJQO0FBNkJQQyxZQUFRLEVBQUU7QUFBQSxhQUFNbkIsRUFBRSxDQUFDZSxNQUFILENBQVVoQixXQUFXLENBQUNtQixHQUFaLEVBQVYsQ0FBTjtBQUFBLEtBN0JIO0FBOEJQRSxRQUFJLEVBQUUsY0FBQ3pCLE1BQUQsRUFBU0csTUFBVDtBQUFBLGFBQW9CZCxNQUFNLENBQUNxQyxLQUFQLENBQWExQixNQUFiLEVBQXFCRyxNQUFyQixFQUE2QndCLElBQTdCLENBQWtDLEVBQWxDLENBQXBCO0FBQUE7QUE5QkMsR0FBWDtBQWlDQSxTQUFPdEIsRUFBUDtBQUNIIiwiZmlsZSI6Ii4vbGliMi9Db21waWxlci9zY2FubmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUnVudGltZSA9IHJlcXVpcmUoJy4vUnVudGltZScpXG5jb25zdCB7IFJvb3RNYXRjaGVyIH0gPSByZXF1aXJlKCcuL01hdGNoZXJzJylcblxubW9kdWxlLmV4cG9ydHMgPSBzY2FubmVyXG5cbmZ1bmN0aW9uIHNjYW5uZXIgKGNvZGUpIHtcbiAgICBjb25zdCBbIEJPRiwgRU9GLCBFT0wgXSA9IFsge30sIHt9LCAnXFxuJyBdXG4gICAgY29uc3QgWyBjaEFsbHMsIGNoTWFwcyBdID0gWyBbXSwgW10gXVxuXG4gICAgLy8g5Yid5aeL5YyW5Luj56CB5pWw5o2uXG4gICAgOygoKSA9PiB7XG4gICAgICAgIGxldCBsaW5lTnVtID0gLTEgLy8g5Y6f5aeL6KGM5qCH77yM5Zug5Li66KaB5a+556m66KGM6L+b6KGM6L+H5rukXG4gICAgICAgIGNvZGUuc3BsaXQoL1xcclxcbj98XFxyP1xcbi8pLmZvckVhY2gobGluZSA9PiB7XG4gICAgICAgICAgICBsaW5lID0gbGluZS50cmltKClcbiAgICAgICAgICAgIGxpbmVOdW0rK1xuXG4gICAgICAgICAgICBpZiAoIWxpbmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IGRvY3VtZW50XG4gICAgICAgICAgICBsaW5lID0gbGluZS5yZXBsYWNlKC9cXC9cXC8oXFwvKT8gLisvLCAobWF0Y2hlZCwgaXNEb2N1bWVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChpc0RvY3VtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50ID0gbWF0Y2hlZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgICAgIH0pLnRyaW0oKVxuXG4gICAgICAgICAgICBpZiAoIWxpbmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgYkluZGV4ID0gY2hBbGxzLmxlbmd0aFxuICAgICAgICAgICAgY2hBbGxzLnB1c2goLi4ubGluZS5zcGxpdCgnJyksICdcXG4nKVxuICAgICAgICAgICAgY29uc3QgZUluZGV4ID0gY2hBbGxzLmxlbmd0aFxuICAgICAgICAgICAgY2hNYXBzLnB1c2goWyBsaW5lTnVtLCBiSW5kZXgsIGVJbmRleCwgZG9jdW1lbnQgXSlcbiAgICAgICAgfSlcbiAgICB9KSgpXG5cbiAgICBjb25zdCByZWNvcmRTdGFjayA9IFtdXG4gICAgY29uc3Qgc3IgPSB7XG4gICAgICAgIEVPRixcbiAgICAgICAgRU9MLFxuICAgICAgICBjaEluZGV4OiAwLFxuICAgICAgICBjaE5vdzogQk9GLFxuICAgICAgICBub3RFT0Y6ICgpID0+IHNyLmNoSW5kZXggPCBjaEFsbHMubGVuZ3RoLFxuICAgICAgICB1c2UgKG1hdGNoZXIpIHtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUuaW5mbygndXNlJywgc3IuY2hJbmRleCwgY2hBbGxzKVxuXG4gICAgICAgICAgICBtYXRjaGVyLnNjYW4obmV3IFJ1bnRpbWUobnVsbCwgbmV3IFJvb3RNYXRjaGVyKCh0aGlzUnVudGltZSkgPT4ge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUuaW5mbygncmVzb2x2ZT09PScsIHRoaXNSdW50aW1lKVxuICAgICAgICAgICAgfSwgKHRoaXNSdW50aW1lLCBlcnJvcikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyh0aGlzUnVudGltZSwgZXJyb3IpXG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ+ino+aekOWHuumUmeWVpicpXG4gICAgICAgICAgICB9KSwgeyBzciB9KSlcbiAgICAgICAgfSxcbiAgICAgICAgcmVhZDogKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNyLmNoSW5kZXggPT09IGNoQWxscy5sZW5ndGgpIHsgLy8g5aSE5LqO5paH5Lu257uT5bC+XG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ2No5bey57uP5Yiw6L6+57uT5bC+JylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzci5jaE5vdyA9IGNoQWxsc1tzci5jaEluZGV4KytdXG4gICAgICAgIH0sXG4gICAgICAgIGJhY2s6ICgpID0+IHNyLmNoTm93ID0gY2hBbGxzWy0tc3IuY2hJbmRleF0sXG4gICAgICAgIGVycm9yIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxuICAgICAgICB9LFxuICAgICAgICBtb3ZlVG86IChjaEluZGV4KSA9PiBzci5jaE5vdyA9IGNoQWxsc1tzci5jaEluZGV4ID0gY2hJbmRleF0sXG4gICAgICAgIGNyZWF0ZVJlY29yZDogKCkgPT4gcmVjb3JkU3RhY2sucHVzaChzci5jaEluZGV4KSxcbiAgICAgICAgcmVtb3ZlUmVjb3JkOiAoKSA9PiByZWNvcmRTdGFjay5wb3AoKSxcbiAgICAgICAgcm9sbGJhY2s6ICgpID0+IHNyLm1vdmVUbyhyZWNvcmRTdGFjay5wb3AoKSksXG4gICAgICAgIHRleHQ6IChiSW5kZXgsIGVJbmRleCkgPT4gY2hBbGxzLnNsaWNlKGJJbmRleCwgZUluZGV4KS5qb2luKCcnKSxcbiAgICB9XG5cbiAgICByZXR1cm4gc3Jcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib2/Compiler/scanner.js\n");

/***/ }),

/***/ "./lib2/index.js":
/*!***********************!*\
  !*** ./lib2/index.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Compiler = __webpack_require__(/*! ./Compiler */ \"./lib2/Compiler/index.js\");\n\nvar compiler = new Compiler({\n  matchers: {\n    main: {\n      // source: '<w>+',\n      source: ' <objectField> | <jsExpression> '\n    },\n    objectField: {\n      source: \"\\n                '@' <objectFieldKey> ( ':' <dbFieldKey> )? <eol> | \\n                '@' <objectFieldKey> (\\n                    ' ' <objectFiledValueExpression> <eol> |\\n                    ( '(' <s>* ')' )? ( <map> | <list> | <block> ) |\\n                    '(' <listLength> ')' <list> |\\n                    ( ':' <dbTableName> )? '(' <dbSqlExpression>? ')' (\\n                        <map> | <list> | <block>\\n                    )\\n                )\\n            \",\n      before: function before(tb) {\n        return tb.objectFieldCreate();\n      },\n      done: function done(tb) {\n        return tb.objectFieldComplete();\n      },\n      document: function document(tb, text) {\n        return tb.documentCreate(text);\n      }\n    },\n    objectFieldKey: {\n      source: ' <w>+ ',\n      done: function done(tb, text) {\n        return tb.objectFieldSetKey(text);\n      }\n    },\n    objectFiledValueExpression: {\n      source: function source(sr) {\n        var hasMatched = false;\n\n        while (true) {\n          if (sr.read() === sr.EOL) {\n            sr.back();\n            break;\n          }\n\n          hasMatched = true;\n        }\n\n        return hasMatched;\n      },\n      done: function done(tb, text) {\n        return tb.objectFieldSetValueExpression(text);\n      }\n    },\n    map: {\n      source: \" \\n                '{' <eol> <dbFieldDefine>? <objectField>* '}' <eol> \\n            \",\n      before: function before(tb) {\n        return tb.mapCreate();\n      },\n      done: function done(tb) {\n        return tb.childCompile();\n      }\n    },\n    list: {\n      source: \"\\n                '[' <eol> <dbFieldDefine>? <objectField>* ']' <eol>\\n            \",\n      before: function before(tb) {\n        return tb.listCreate();\n      },\n      done: function done(tb) {\n        return tb.childCompile();\n      }\n    },\n    listLength: {\n      source: ' <d>+ ',\n      done: function done(tb, text) {\n        return tb.listSetLength(text);\n      }\n    },\n    block: {\n      source: \"\\n                '(:' <eol> <dbFieldDefine>? <blockExpression>* <valueReturnExpression> ':)' <eol> \\n            \",\n      before: function before(tb) {\n        return tb.block();\n      },\n      done: function done(tb) {\n        return tb.childCompile();\n      }\n    },\n    blockExpression: {\n      source: function source(sr) {\n        var text = [];\n\n        while (true) {\n          var cr = sr.read();\n\n          if (cr === sr.EOL) {\n            break;\n          }\n\n          text.push(cr);\n        }\n\n        var line = text.join('');\n\n        if (/^@|^:\\)$/.test(line)) {\n          return false;\n        }\n\n        return true;\n      },\n      done: function done(tb, text) {\n        return tb.setBlockExpression(text);\n      }\n    },\n    valueReturnExpression: {\n      source: function source(sr) {\n        if (sr.read() !== '@' || sr.read() !== ' ') {\n          return false;\n        }\n\n        while (true) {\n          if (sr.read() === sr.EOL) {\n            break;\n          }\n        }\n\n        return true;\n      },\n      done: function done(tb, text) {\n        return tb.setValueReturnExpression(text.slice(2, -1));\n      }\n    },\n    jsExpression: {\n      source: ' <.>+ <eol> ',\n      done: function done(tb, text) {\n        return tb.setJsExpression(text.slice(0, -1));\n      }\n    },\n    dbFieldKey: {\n      source: \"\\n                <w> (<w> | '.')*\\n            \",\n      done: function done(tb, text) {\n        return tb.dbSetFieldKey(text);\n      }\n    },\n    dbTableName: {\n      source: ' <w>+ ',\n      done: function done(tb, text) {\n        return tb.dbSetTableName(text);\n      }\n    },\n    dbSqlExpression: {\n      source: function source(sr) {\n        var hasMatched = false;\n        var isEscape = false; // 是否遇到转义反斜杠\n\n        var bkLength = 0; // 括号开启的次数\n\n        while (sr.notEOF()) {\n          var cr = sr.read();\n\n          if (isEscape) {\n            isEscape = false;\n          } else if (cr === '\\\\') {\n            isEscape = true;\n          } else if (cr === '(') {\n            bkLength++;\n          } else if (cr === ')') {\n            if (bkLength > 0) {\n              bkLength--;\n            } else {\n              // 结束\n              sr.back();\n              break;\n            }\n          }\n\n          hasMatched = true; // 任意长度，表示成功\n        }\n\n        return hasMatched;\n      },\n      done: function done(tb, text) {\n        return tb.dbSetSqlExpression(text);\n      }\n    },\n    dbFieldDefine: {\n      source: function source(sr) {\n        if (sr.read() !== '#') {\n          return false;\n        }\n\n        var text = [];\n\n        while (sr.notEOF()) {\n          var cr = sr.read();\n\n          if (cr === sr.EOL) {\n            break;\n          }\n\n          text.push(cr);\n        }\n\n        return /^\\(.+?\\)$/.test(text.join(''));\n      },\n      done: function done(tb, text) {\n        return tb.dbSetFieldDefine(text.slice(2, -2));\n      }\n    }\n  }\n});\nmodule.exports = {\n  compile: function compile(code) {\n    return compiler.run(code);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib2/index.js\n");

/***/ })

/******/ });